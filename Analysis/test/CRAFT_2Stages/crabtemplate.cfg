[CRAB]

jobtype = cmssw
scheduler = caf
### NOTE: just setting the name of the server (pi, lnl etc etc ) 
###       crab will submit the jobs to the server...   
#server_name = cnaf

[CMSSW]

### The data you want to access (to be found on DBS) 
datasetpath=/Calo/Commissioning08_CRAFT_ALL_V9_225-v3/RECO
use_parent = 1
runselection=_RUN_

### The ParameterSet you want to use
pset=FilterCraft.py

### Splitting parameters
total_number_of_events=10000 
#total_number_of_events=-1
events_per_job = 2000
#number_of_jobs = -1

### The output files (comma separated list)
output_file = Filter_Data_Histos.root
	
[USER]

### OUTPUT files Management
##  output back into UI 
return_data = 0

### OUTPUT files INTO A SE
copy_data = 1
storage_element = T1_CH_CERN_Buffer
user_remote_dir = NTuple2FileSolution_RUN_/

ui_working_dir = NTuple2FileSolution_RUN_

#if server 
thresholdLevel = 50
eMail = benjpjones@googlemail.com 

[EDG]

## RB/WMS management:
rb = CERN
proxy_server = myproxy.cern.ch

##  Black and White Lists management:
## By Storage
#se_black_list = 
#se_white_list = 

se_black_list = fnal.gov, fzk.de, srm.grid.sinica.edu.tw, srm2.grid.sinica.edu.tw, gridpp.rl.ac.uk , pic.es , cnaf
ce_black_list = cclcgceli03.in2p3.fr,cclcgceli04.in2p3.fr



[CONDORG]

# Set this to condor to override the batchsystem defined in gridcat.
#batchsystem = condor

# Specify addition condor_g requirments
# use this requirment to run on a cms dedicated hardare
# globus_rsl = (condor_submit=(requirements 'ClusterName == \"CMS\" && (Arch == \"INTEL\" || Arch == \"X86_64\")'))
# use this requirement to run on the new hardware
#globus_rsl = (condor_submit=(requirements 'regexp(\"cms-*\",Machine)'))

